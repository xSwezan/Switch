"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[778],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=i,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?r.createElement(g,o(o({ref:n},c),{},{components:t})):r.createElement(g,o({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},852:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],l={sidebar_position:3},s="useTrail",p={unversionedId:"Hooks/useTrail",id:"Hooks/useTrail",isDocsHomePage:!1,title:"useTrail",description:"Overview",source:"@site/docs/Hooks/useTrail.md",sourceDirName:"Hooks",slug:"/Hooks/useTrail",permalink:"/roact-spring/docs/Hooks/useTrail",editUrl:"https://github.com/chriscerie/roact-spring/edit/master/docs/Hooks/useTrail.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"useSprings",permalink:"/roact-spring/docs/Hooks/useSprings"},next:{title:"Controller",permalink:"/roact-spring/docs/Additional Classes/controller"}},c=[{value:"Overview",id:"overview",children:[{value:"Either: declaratively overwrite values to change the animation",id:"either-declaratively-overwrite-values-to-change-the-animation",children:[],level:3},{value:"Or: pass a function that returns values, and imperatively update using the api",id:"or-pass-a-function-that-returns-values-and-imperatively-update-using-the-api",children:[],level:3},{value:"Finally: apply styles to components",id:"finally-apply-styles-to-components",children:[],level:3}],level:2},{value:"Properties",id:"properties",children:[],level:2},{value:"Demos",id:"demos",children:[{value:"Staggered list",id:"staggered-list",children:[],level:3},{value:"Trailing elements",id:"trailing-elements",children:[],level:3}],level:2}],u={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usetrail"},"useTrail"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Creates multiple springs with a single config, each spring will follow the previous one. Use it for staggered animations."),(0,a.kt)("h3",{id:"either-declaratively-overwrite-values-to-change-the-animation"},"Either: declaratively overwrite values to change the animation"),(0,a.kt)("p",null,"If you re-render the component with changed props, the animation will update."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local springProps = {}\nlocal length = #items\nfor index, item in ipairs(items) do\n    table.insert(springProps, {\n        transparency = if toggles[i] then 1 else 0,\n    })\nend\nlocal springs = RoactSpring.useTrail(hooks, length, springProps)\n")),(0,a.kt)("p",null,"If you want the animation to run on mount, you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"from")," to set the initial value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local springProps = {}\nlocal length = #items\nfor index, item in ipairs(items) do\n    table.insert(springProps, {\n        from = { transparency = item.transparency },\n        to = { transparency = if toggles[i] then 1 else 0 },\n    })\nend\nlocal springs = RoactSpring.useTrail(hooks, length, springProps)\n")),(0,a.kt)("h3",{id:"or-pass-a-function-that-returns-values-and-imperatively-update-using-the-api"},"Or: pass a function that returns values, and imperatively update using the api"),(0,a.kt)("p",null,"You will get an API table back. It will not automatically animate on mount and re-render, but you can call ",(0,a.kt)("inlineCode",{parentName:"p"},"api.start")," to start the animation. Handling updates like this is generally preferred as it's more powerful. Further documentation can be found in ",(0,a.kt)("a",{parentName:"p",href:"/docs/common/imperatives"},"Imperatives"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"local length = #items\nlocal springs, api = RoactSpring.useTrail(hooks, length, function(index)\n    return { transparency = items[index].transparency }\nend)\n\n-- Start animations\napi.start(function(index)\n    return { position = UDim2.fromScale(0.5 * index, 0.16) }\nend)\n-- Stop all springs\napi.stop()\n")),(0,a.kt)("h3",{id:"finally-apply-styles-to-components"},"Finally: apply styles to components"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local contents = {}\nfor i = 1, 4 do\n    contents[i] = Roact.createElement("Frame", {\n        Position = springs[i].position,\n        Size = UDim2.fromScale(0.3, 0.3),\n    })\nend\nreturn contents\n')),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("p",null,"All properties documented in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/common/props"},"common props")," apply."),(0,a.kt)("p",null,"By default, each spring will start 0.1 seconds after the previous one. You can override this by passing a ",(0,a.kt)("inlineCode",{parentName:"p"},"delay")," property."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"-- Now each spring will start 0.2 seconds after the previous one\nlocal springs, api = RoactSpring.useTrail(hooks, length, function(index)\n    return {\n        transparency = items[index].transparency,\n        delay = 0.2,\n    }\nend)\n")),(0,a.kt)("p",null,"You can also pass a ",(0,a.kt)("inlineCode",{parentName:"p"},"delay")," property to each spring individually."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"-- The first spring will start 0.1 seconds after the previous one, the second 0.2 seconds, and so on\nlocal springs, api = RoactSpring.useTrail(hooks, length, function(index)\n    return {\n        transparency = items[index].transparency,\n        delay = index * 0.1,\n    }\nend)\n")),(0,a.kt)("h2",{id:"demos"},"Demos"),(0,a.kt)("h3",{id:"staggered-list"},"Staggered list"),(0,a.kt)("a",{href:"https://github.com/chriscerie/roact-spring/blob/main/stories/hooks/useTrailList.story.lua"},(0,a.kt)("img",{src:"https://media.giphy.com/media/XfG0GNKGCKang91lLN/giphy.gif",width:"400"})),(0,a.kt)("h3",{id:"trailing-elements"},"Trailing elements"),(0,a.kt)("a",{href:"https://github.com/chriscerie/roact-spring/blob/main/stories/hooks/useTrailFollow.story.lua"},(0,a.kt)("img",{src:"https://media.giphy.com/media/BS20XRr522AJgkCyZR/giphy.gif",width:"400"})))}d.isMDXComponent=!0}}]);