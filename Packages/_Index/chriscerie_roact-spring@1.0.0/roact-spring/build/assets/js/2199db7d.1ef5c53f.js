"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[746],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,g=m["".concat(s,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(g,l(l({ref:t},d),{},{components:n})):a.createElement(g,l({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1775:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={sidebar_position:3},s="Configs",p={unversionedId:"Common/configs",id:"Common/configs",isDocsHomePage:!1,title:"Configs",description:"Overview",source:"@site/docs/Common/configs.md",sourceDirName:"Common",slug:"/Common/configs",permalink:"/roact-spring/docs/Common/configs",editUrl:"https://github.com/chriscerie/roact-spring/edit/master/docs/Common/configs.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Props",permalink:"/roact-spring/docs/Common/props"},next:{title:"Imperatives",permalink:"/roact-spring/docs/Common/imperatives"}},d=[{value:"Overview",id:"overview",children:[],level:2},{value:"Presets",id:"presets",children:[],level:2},{value:"Easings",id:"easings",children:[],level:2},{value:"Advanced Configs",id:"advanced-configs",children:[{value:"Velocity Config",id:"velocity-config",children:[],level:3}],level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"configs"},"Configs"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Springs are configurable and can be tuned. If you want to adjust these settings, you can provide a default ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," table to ",(0,i.kt)("inlineCode",{parentName:"p"},"useSpring"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"local styles, api = RoactSpring.useSpring(hooks, function()\n    return {\n        from = {\n            position = UDim2.fromScale(0.5, 0.5),\n            rotation = 0,\n        },\n        config = { mass = 10, tension = 100, friction = 50 },\n    }\n})\n")),(0,i.kt)("p",null,"Configs can also be adjusted when animating the spring. If there isn't any config provided, the default config will be used."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"api.start({\n    position = UDim2.fromScale(0.5, 0.5),\n    rotation = 0,\n    config = { mass = 10, tension = 100, friction = 50 },\n})\n")),(0,i.kt)("p",null,"The following configs are available:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"mass"),(0,i.kt)("td",{parentName:"tr",align:null},"1"),(0,i.kt)("td",{parentName:"tr",align:null},"spring mass")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"tension"),(0,i.kt)("td",{parentName:"tr",align:null},"170"),(0,i.kt)("td",{parentName:"tr",align:null},"spring energetic load")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"friction"),(0,i.kt)("td",{parentName:"tr",align:null},"26"),(0,i.kt)("td",{parentName:"tr",align:null},"spring resistence")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"clamp"),(0,i.kt)("td",{parentName:"tr",align:null},"false"),(0,i.kt)("td",{parentName:"tr",align:null},"when true, stops the spring once it overshoots its boundaries")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"velocity"),(0,i.kt)("td",{parentName:"tr",align:null},"0"),(0,i.kt)("td",{parentName:"tr",align:null},"initial velocity, see ",(0,i.kt)("a",{parentName:"td",href:"/docs/common/configs#velocity-config"},"velocity config")," for more detais")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easing"),(0,i.kt)("td",{parentName:"tr",align:null},"t => t"),(0,i.kt)("td",{parentName:"tr",align:null},"linear by default, there is a multitude of easings available ",(0,i.kt)("a",{parentName:"td",href:"/docs/common/configs#easings"},"here"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"damping"),(0,i.kt)("td",{parentName:"tr",align:null},"1"),(0,i.kt)("td",{parentName:"tr",align:null},"The damping ratio, which dictates how the spring slows down. Only works when ",(0,i.kt)("inlineCode",{parentName:"td"},"frequency")," is defined. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"1"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"duration"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"if > than 0, will switch to a duration-based animation instead of spring physics, value should be indicated in seconds (e.g. duration: 2 for a duration of 2s)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"frequency"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"The frequency response (in seconds), which dictates the duration of one period in a frictionless environment. When defined, ",(0,i.kt)("inlineCode",{parentName:"td"},"tension")," is derived from this, and ",(0,i.kt)("inlineCode",{parentName:"td"},"friction")," is derived from this and ",(0,i.kt)("inlineCode",{parentName:"td"},"damping"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"bounce"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},"When above zero, the spring will bounce instead of overshooting when exceeding its goal value.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"precision"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},'How close to the end result the animated value gets before we consider it to be "there". When undefined, ideal precision will be calculated by the distance from ',(0,i.kt)("inlineCode",{parentName:"td"},"from")," to ",(0,i.kt)("inlineCode",{parentName:"td"},"to"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"restVelocity"),(0,i.kt)("td",{parentName:"tr",align:null},"undefined"),(0,i.kt)("td",{parentName:"tr",align:null},'The smallest velocity before the animation is considered to be "not moving". When undefined, precision is used instead.')))),(0,i.kt)("iframe",{src:"https://codesandbox.io/embed/react-spring-config-x1vjb?fontsize=14&hidenavigation=1&theme=dark&view=preview",width:"100%",height:"500",title:"react-spring-config",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}),(0,i.kt)("h2",{id:"presets"},"Presets"),(0,i.kt)("p",null,"There are also a couple of generic presets that will cover some common ground."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"RoactSpring.config = {\n    default = { mass: 1, tension: 170, friction: 26 },\n    gentle = { mass: 1, tension: 120, friction: 14 },\n    wobbly = { mass: 1, tension: 180, friction: 12 },\n    stiff = { mass: 1, tension: 210, friction: 20 },\n    slow = { mass: 1, tension: 280, friction: 60 },\n    molasses = { mass: 1, tension: 280, friction: 120 },\n}\n")),(0,i.kt)("iframe",{src:"https://codesandbox.io/embed/react-spring-preset-configs-kdv7r?fontsize=14&hidenavigation=1&theme=dark&view=preview",width:"100%",height:"500",title:"react-spring-config",allow:"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking",sandbox:"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"}),(0,i.kt)("h2",{id:"easings"},"Easings"),(0,i.kt)("p",null,"While react-spring should generally be used to with springs, sometimes parameterizing animations with durations may be required (e.g., timers)."),(0,i.kt)("p",null,"The following easing functions are supported when ",(0,i.kt)("inlineCode",{parentName:"p"},"duration")," is set."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"In"),(0,i.kt)("th",{parentName:"tr",align:null},"Out"),(0,i.kt)("th",{parentName:"tr",align:null},"In Out"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInBack"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutBack"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutBack")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInBounce"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutBounce"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutBounce")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInCirc"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutCirc"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutCirc")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInCubic"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutCubic"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutCubic")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInElastic"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutElastic"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutElastic")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInExpo"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutExpo"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutExpo")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInQuad"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutQuad"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutQuad")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInQuart"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutQuart"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutQuart")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInQuint"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutQuint"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutQuint")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"easeInSine"),(0,i.kt)("td",{parentName:"tr",align:null},"easeOutSine"),(0,i.kt)("td",{parentName:"tr",align:null},"easeInOutSine")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"api.start({\n    position = UDim2.fromScale(0.5, 0.5),\n    rotation = 0,\n    config = { mass: 10, tension: 100, friction: 50 },\n})\n")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"ONLY UPDATE IMPERATIVELY")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Due to the way easings handle interuptions, it is recommended to only update the spring values imperatively. Setting the target value midway will cause the duration timer to reset."))),(0,i.kt)("h2",{id:"advanced-configs"},"Advanced Configs"),(0,i.kt)("h3",{id:"velocity-config"},"Velocity Config"),(0,i.kt)("p",null,"When a number, the ",(0,i.kt)("inlineCode",{parentName:"p"},"velocity")," config applies initial velocity towards or away from the target."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"-- Start with initial velocity away from `to`\nlocal styles = RoactSpring.useSpring(hooks, {\n    position = if toggle then UDim2.fromScale(0.5, 0.8) else UDim2.fromScale(0.5, 0.5),\n    config = { velocity = -0.01 },\n})\n")),(0,i.kt)("p",null,"For further customization on the direction of the velocity, you can pass a table of values, one for each element."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"-- Start with initial velocity pointed towards the top-left corner\nlocal styles = RoactSpring.useSpring(hooks, {\n    position = if toggle then UDim2.fromScale(0.5, 0.8) else UDim2.fromScale(0.5, 0.5),\n    config = { velocity = {-0.01, 0, -0.01, 0} },\n})\n")),(0,i.kt)("p",null,"Passing in a single number where ",(0,i.kt)("inlineCode",{parentName:"p"},"to")," equals ",(0,i.kt)("inlineCode",{parentName:"p"},"from")," will not move the spring at all. This is because ",(0,i.kt)("inlineCode",{parentName:"p"},"react-spring")," can't determine the direction of the velocity from one point alone. To apply a velocity, you must indicate which axes to apply it to by passing in a table of values."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},"-- Will not do anything\nlocal styles = RoactSpring.useSpring(hooks, {\n    position = UDim2.fromScale(0.5, 0.5),\n    config = { velocity = -0.01 },\n})\n\n-- Will apply velocity towards the top-left corner and then return back to original position\nlocal styles = RoactSpring.useSpring(hooks, {\n    position = UDim2.fromScale(0.5, 0.5),\n    config = { velocity = {-0.01, 0, -0.01, 0} },\n})\n")))}m.isMDXComponent=!0}}]);